services:
  postgres:
    image: 'postgres:11'
    restart: always
    container_name: 'AvaliationPostgres'
    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: root
    ports:
      - '5432:5432'
  redis:
    image: 'redis:latest'
    ports:
      - '6379'
  localstack:
    container_name: localstack-example
    image: localstack/localstack
    hostname: localstack
    ports:
      - "127.0.0.1:4566:4566"
    environment:
      - SKIP_SSL_CERT_DOWNLOAD=1
      - SERVICES=sqs
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=ANUJDEKAVADIYAEXAMPLE
      - AWS_SECRET_ACCESS_KEY=2QvM4/Tdmf38SkcD/qalvXO4EXAMPLEKEY
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
  prometheus:
    container_name: "prometheus"
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml:ro"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    network_mode: "host"
  grafana:
    container_name: "grafana"
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
    network_mode: "host"